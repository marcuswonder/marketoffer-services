services:
  web:
    profiles: ["app"]
    build: .
    command: npm start
    ports:
      - "3000:3000"
    depends_on:
      - redis
    environment:
      NODE_ENV: ${NODE_ENV}
      PORT: ${PORT}
      # DB
      DATABASE_URL: ${DATABASE_URL}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      # Redis / flags
      REDIS_URL: ${REDIS_URL}
      WRITE_TO_AIRTABLE: ${WRITE_TO_AIRTABLE}
  worker-ch:
    profiles: ["workers"]
    build: .
    command: sh -c "npm run build && node dist/workers/chAppointments.js"
    depends_on:
      - redis
    environment:
      # App DB
      DATABASE_URL: ${DATABASE_URL}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      # Redis / flags
      REDIS_URL: ${REDIS_URL}
      WRITE_TO_AIRTABLE: ${WRITE_TO_AIRTABLE}
      # External APIs
      CH_API_BASE: ${CH_API_BASE}
      CH_API_KEY: ${CH_API_KEY}
      AIRTABLE_API_KEY: ${AIRTABLE_API_KEY}
      AIRTABLE_BASE_ID: ${AIRTABLE_BASE_ID}
  worker-company:
    profiles: ["workers"]
    build: .
    command: sh -c "npm run build && node dist/workers/companyDiscovery.js"
    depends_on:
      - redis
    environment:
      # App DB
      DATABASE_URL: ${DATABASE_URL}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      # Redis / flags
      REDIS_URL: ${REDIS_URL}
      WRITE_TO_AIRTABLE: ${WRITE_TO_AIRTABLE}
      # External APIs
      SERPER_API_KEY: ${SERPER_API_KEY}
      AIRTABLE_API_KEY: ${AIRTABLE_API_KEY}
      AIRTABLE_BASE_ID: ${AIRTABLE_BASE_ID}
  worker-person:
    profiles: ["workers"]
    build: .
    command: sh -c "npm run build && node dist/workers/personLinkedin.js"
    depends_on:
      - redis
    environment:
      # App DB
      DATABASE_URL: ${DATABASE_URL}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      # Redis / flags
      REDIS_URL: ${REDIS_URL}
      WRITE_TO_AIRTABLE: ${WRITE_TO_AIRTABLE}
      # External APIs
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      LLM_DEBUG_LOGS: ${LLM_DEBUG_LOGS}
      SERPER_API_KEY: ${SERPER_API_KEY}
      AIRTABLE_API_KEY: ${AIRTABLE_API_KEY}
      AIRTABLE_BASE_ID: ${AIRTABLE_BASE_ID}
  worker-sitefetch:
    profiles: ["workers"]
    build: .
    command: sh -c "npm run build && node dist/workers/siteFetch.js"
    depends_on:
      - redis
    environment:
      # App DB
      DATABASE_URL: ${DATABASE_URL}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      # Redis / flags
      REDIS_URL: ${REDIS_URL}
      WRITE_TO_AIRTABLE: ${WRITE_TO_AIRTABLE}
      # External APIs
      SCRAPINGBEE_API_KEY: ${SCRAPINGBEE_API_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      SERPER_API_KEY: ${SERPER_API_KEY}
      SITEFETCH_MODE: ${SITEFETCH_MODE}
  worker-owner:
    profiles: ["workers"]
    build: .
    command: sh -c "npm run build && node dist/workers/ownerDiscovery.js"
    depends_on:
      - redis
    environment:
      # App DB
      DATABASE_URL: ${DATABASE_URL}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      # Redis / flags
      REDIS_URL: ${REDIS_URL}
      WRITE_TO_AIRTABLE: ${WRITE_TO_AIRTABLE}
      OWNER_ACCEPT_THRESHOLD: ${OWNER_ACCEPT_THRESHOLD}
      OWNER_REVIEW_THRESHOLD: ${OWNER_REVIEW_THRESHOLD}
      OWNER_QUEUE_CH_DIRECTORS: ${OWNER_QUEUE_CH_DIRECTORS}
      # External APIs
      LAND_REGISTRY_CORPORATE_DATA: ${LAND_REGISTRY_CORPORATE_DATA}
      LAND_REGISTRY_CORPORATE_DATA_URL: ${LAND_REGISTRY_CORPORATE_DATA_URL}
      LAND_REGISTRY_CORPORATE_DATA_REFRESH_MONTHS: ${LAND_REGISTRY_CORPORATE_DATA_REFRESH_MONTHS}
      LAND_REGISTRY_CORPORATE_API: ${LAND_REGISTRY_CORPORATE_API}
      LAND_REGISTRY_API_BASE: ${LAND_REGISTRY_API_BASE}
      LAND_REGISTRY_UK_CORPORATE_DATASET: ${LAND_REGISTRY_UK_CORPORATE_DATASET}
      LAND_REGISTRY_INTL_CORPORATE_DATASET: ${LAND_REGISTRY_INTL_CORPORATE_DATASET}
      T2A_API_KEY: ${T2A_API_KEY}
      T2A_BASE_URL: ${T2A_BASE_URL}
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
