import { Router } from 'express';

export const router = Router();

const page = [
  '<!doctype html>',
  '<html lang="en">',
  '<head>',
  '  <meta charset="utf-8" />',
  '  <meta name="viewport" content="width=device-width, initial-scale=1" />',
  '  <title>Discovery Workflows</title>',
  '  <link rel="apple-touch-icon" sizes="180x180" href="https://marketoffer-public-resources.s3.eu-west-2.amazonaws.com/Favicons/apple-touch-icon.png" />',
  '  <link rel="icon" type="image/png" sizes="32x32" href="https://marketoffer-public-resources.s3.eu-west-2.amazonaws.com/Favicons/favicon-32x32.png" />',
  '  <link rel="icon" type="image/png" sizes="16x16" href="https://marketoffer-public-resources.s3.eu-west-2.amazonaws.com/Favicons/favicon-16x16.png" />',
  '  <link rel="shortcut icon" href="https://marketoffer-public-resources.s3.eu-west-2.amazonaws.com/Favicons/favicon.ico" />',
  '  <style>',
  '    :root { --bg:#0f172a; --panel:#111827; --muted:#9ca3af; --text:#f3f4f6; --accent:#60a5fa; --border:#243041; }',
  '    html, body { height:100%; margin:0; padding:0; background:var(--bg); color:var(--text); font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Inter, Arial; }',
  '    .nav { display:flex; gap:16px; justify-content:center; padding:16px 12px; background:rgba(9,15,29,0.6); border-bottom:1px solid var(--border); position:sticky; top:0; z-index:10; align-items:center; flex-wrap:wrap; }',
  '    .nav-brand { display:flex; align-items:center; gap:10px; margin-right:12px; }',
  '    .nav-brand img { height:38px; width:auto; }',
  '    .nav .btn { padding:8px 12px; border-radius:8px; border:1px solid var(--border); background:#101a2d; color:var(--text); text-decoration:none; font-size:14px; transition:background .15s ease, border-color .15s ease; }',
  '    .nav .btn:hover { background:#16213a; border-color:#2d3b52; }',
  '    .nav .btn.active { background:#1f2a40; border-color:#334155; }',
  '    .nav .btn.disabled { opacity:0.55; pointer-events:none; cursor:default; }',
  '    .wrap { display:flex; height:100%; }',
  '    .left { width:360px; border-right:1px solid #1f2937; display:flex; flex-direction:column; }',
  '    .left .hdr { padding:12px 14px; font-weight:600; border-bottom:1px solid #1f2937; display:flex; align-items:center; gap:8px; }',
  '    .left .hdr input { background:#0b1220; color:var(--text); border:1px solid #243041; padding:6px 8px; border-radius:6px; width:80px; }',
  '    .left .list { overflow:auto; }',
  '    .item { padding:10px 14px; border-bottom:1px solid #1f2937; cursor:pointer; }',
  '    .item:hover { background:#0b1220; }',
  '    .item .id { font-family: ui-monospace, SFMono-Regular, Menlo, monospace; font-size:12px; color:var(--muted); }',
  '    .item .row { display:flex; gap:10px; font-size:12px; color:var(--muted); margin-top:6px; }',
  '    .badge { display:inline-block; padding:2px 6px; border-radius:999px; font-size:11px; background:#0b1220; color:#cbd5e1; border:1px solid #243041; }',
  '    .right { flex:1; display:flex; flex-direction:column; }',
  '    .right .hdr { padding:12px 16px; border-bottom:1px solid #1f2937; display:flex; align-items:center; justify-content:space-between; gap:10px; }',
  '    .right .hdr .title { font-weight:700; }',
  '    .right .hdr .subs { color:var(--muted); font-size:12px; }',
  '    .right .body { overflow:auto; padding:12px 8px; }',
  '    .timeline { max-width:1100px; margin:0 auto; }',
  '    .ev { display:grid; grid-template-columns: 180px 130px 1fr; gap:12px; padding:10px 12px; border-bottom:1px dashed #1f2937; }',
  '    .ev .ts { color:var(--muted); font-size:12px; }',
  '    .ev .queue { font-size:12px; color:#cbd5e1; }',
  '    .ev .msg { }',
  '    .ev .msg .m { font-weight:600; }',
  '    .ev .msg pre { white-space:pre-wrap; background:#0b1220; border:1px solid #243041; padding:8px; border-radius:6px; color:#cbd5e1; font-size:12px; margin:6px 0 0; }',
  '    .grid { display:flex; gap:8px; }',
  '    .grid .tile { background:#0b1220; border:1px solid #243041; padding:8px 10px; border-radius:6px; font-size:12px; }',
  '    a { color:var(--accent); text-decoration:none; }',
  '  </style>',
  '</head>',
  '<body>',
  '  <nav class="nav" data-current="workflows">',
  '    <a class="nav-brand" href="/">',
  '      <img src="https://marketoffer-public-resources.s3.eu-west-2.amazonaws.com/MarketOffer+Icon+-+500px+Width+Inc+Border.png" alt="MarketOffer" />',
  '    </a>',
  '    <a class="btn" data-role="nav-btn" data-target="requests" data-base="/admin/requests" href="/admin/requests">View Requests</a>',
  '    <a class="btn" data-role="nav-btn" data-target="request" data-base="/admin/request" href="/admin/request">New Request</a>',
  '    <a class="btn" data-role="nav-btn" data-target="progress" data-base="/admin/progress" data-requires-root="1" href="/admin/progress">Progress Summary</a>',
  '    <a class="btn" data-role="nav-btn" data-target="workflows" data-base="/admin/workflows" data-requires-root="1" href="/admin/workflows">Workflow Detail</a>',
  '  </nav>',
  '  <div class="wrap">',
  '    <div class="left">',
  '      <div class="hdr">',
  '        <div style="flex:1">Workflows</div>',
  '        <label style="font-size:12px;color:var(--muted)">limit</label>',
  '        <input id="limit" value="25" />',
  '        <button id="refresh">Refresh</button>',
  '      </div>',
  '      <div id="list" class="list"></div>',
  '    </div>',
  '    <div class="right">',
  '      <div class="hdr">',
  '        <div>',
  '          <div class="title" id="title">Select a workflow</div>',
  '          <div class="subs" id="subs"></div>',
  '        </div>',
  '        <div class="grid" id="summary"></div>',
  '      </div>',
  '      <div class="body">',
  '        <div class="timeline" id="timeline"></div>',
  '      </div>',
  '    </div>',
  '  </div>',
  '  <script>',
  "    const navButtons = Array.from(document.querySelectorAll('[data-role=\"nav-btn\"]'));",
  '    const navCurrent = document.querySelector(".nav")?.dataset.current || "";',
  '    function applyNavRoot(root) {',
  '      navButtons.forEach((btn) => {',
  '        const target = btn.dataset.target || "";',
  '        if (target === navCurrent) { btn.classList.add("active"); } else { btn.classList.remove("active"); }',
  '        const base = btn.dataset.base || btn.getAttribute("href") || "#";',
  '        if (btn.dataset.requiresRoot === "1") {',
  '          if (root) {',
  '            btn.setAttribute("href", `${base}?root=${encodeURIComponent(root)}`);',
  '            btn.classList.remove("disabled");',
  '            btn.setAttribute("aria-disabled", "false");',
  '          } else {',
  '            btn.setAttribute("href", "#");',
  '            btn.classList.add("disabled");',
  '            btn.setAttribute("aria-disabled", "true");',
  '          }',
  '        } else {',
  '          btn.setAttribute("href", base);',
  '        }',
  '      });',
  '      window.__currentNavRoot = root;',
  '    }',
  '    window.__setNavRoot = applyNavRoot;',
  '    const initRoot = new URLSearchParams(window.location.search).get("root") || "";',
  '    applyNavRoot(initRoot);',
  '    const fmtTs = (s) => new Date(s).toLocaleString();',
  '    const el = (html) => { const d = document.createElement("div"); d.innerHTML = html; return d.firstElementChild; };',
  '    const safe = (o) => { try { return JSON.stringify(o, null, 2); } catch { return String(o); } };',
  '    let jobMap = new Map();',
  '    async function loadList() {',
  '      const limit = document.getElementById("limit").value || "25";',
  '      const res = await fetch("/api/progress/workflows?limit=" + encodeURIComponent(limit));',
  '      const data = await res.json();',
  '      const list = document.getElementById("list");',
  '      list.innerHTML = "";',
  '      data.items.forEach(it => {',
  '        const r = it.root; const id = it.rootJobId;',
  '        const comp = it.discovery.company; const site = it.discovery.sitefetch; const person = it.person;',
  '        const fn = (r && r.data && r.data.firstName) ? String(r.data.firstName) : "";',
  '        const ln = (r && r.data && r.data.lastName) ? String(r.data.lastName) : "";',
  '        const cn = (r && r.data && r.data.companyNumber) ? String(r.data.companyNumber) : "";',
  '        const friendly = (fn + " " + ln).trim() + (cn ? (" \u2013 " + cn) : "");',
  '        const stage = (function(){ const c=(o)=> (o?((o.running||0)+(o.pending||0)):0); if(c(it.discovery.company)>0) return "Discovering companies"; if(c(it.discovery.sitefetch)>0) return "Fetching site data"; if(c(it.person)>0) return "Searching LinkedIn"; const st=String(r.status||"").toLowerCase(); if(st==="completed") return "Completed"; if(st==="failed") return "Failed"; if(st==="running") return "In progress"; return "Queued"; })();',
  '        const div = el(`\n'+
  '          <div class="item" data-id="${id}">\n'+
  '            <div style="font-weight:600;">${friendly || "(No name)"}</div>\n'+
  '            <div class="id">${id}</div>\n'+
  '            <div>${stage} â€¢ ${fmtTs(r.updated_at)}</div>\n'+
  '            <div class="row">\n'+
  '              <span class="badge">company: ${comp.completed || 0}/${comp.total || 0}</span>\n'+
  '              <span class="badge">site: ${site.completed || 0}/${site.total || 0}</span>\n'+
  '              <span class="badge">person: ${person.completed || 0}/${person.total || 0}</span>\n'+
  '            </div>\n'+
  '          </div>\n'+
  '        `);',
  '        div.addEventListener("click", () => select(id));',
  '        list.appendChild(div);',
  '      });',
  '    }',
  '    async function select(rootId) {',
  '      if (typeof window.__setNavRoot === "function") { window.__setNavRoot(rootId); }',
  '      document.getElementById("title").textContent = "Workflow " + rootId;',
  '      document.getElementById("subs").textContent = "";',
  '      document.getElementById("timeline").innerHTML = "Loadingâ€¦";',
  '      document.getElementById("summary").innerHTML = "";',
  '      const [detailRes, tlRes] = await Promise.all([',
  '        fetch("/api/progress/workflows/" + rootId),',
  '        fetch("/api/progress/workflows/" + rootId + "/timeline")',
  '      ]);',
  '      const detail = await detailRes.json();',
  '      const tl = await tlRes.json();',
  '      jobMap = new Map();',
  '      Object.values(detail.jobs).flat().forEach(j => jobMap.set(j.job_id, j.queue));',
  '      const root = detail.root;',
  '      const companies = (root && root.data && root.data.enqueued && root.data.enqueued.companies) ? root.data.enqueued.companies : [];',
  '      const sum = document.getElementById("summary");',
  '      sum.appendChild(el(`<div class="tile">Companies: <b>${companies.length}</b></div>`));',
  '      const comp = detail.jobs.company.length, site = detail.jobs.sitefetch.length, person = detail.jobs.person.length;',
  '      sum.appendChild(el(`<div class="tile">company jobs: <b>${comp}</b></div>`));',
  '      sum.appendChild(el(`<div class="tile">site jobs: <b>${site}</b></div>`));',
  '      sum.appendChild(el(`<div class="tile">person jobs: <b>${person}</b></div>`));',
  '      const tlEl = document.getElementById("timeline");',
  '      tlEl.innerHTML = "";',
  '      tl.events.forEach(ev => {',
  '        const q = jobMap.get(ev.job_id) || "";',
  '        const dataHtml = ev.data ? `<pre>${safe(ev.data)}</pre>` : "";',
  '        tlEl.appendChild(el(`\n'+
  '          <div class="ev">\n'+
  '            <div class="ts">${fmtTs(ev.ts)}</div>\n'+
  '            <div class="queue">${q || "&nbsp;"}</div>\n'+
  '            <div class="msg"><div class="m">${ev.message}</div>${dataHtml}</div>\n'+
  '          </div>\n'+
  '        `));',
  '      });',
  '    }',
  '    document.getElementById("refresh").addEventListener("click", loadList);',
  '    (async () => {',
  '      await loadList();',
  '      const params = new URLSearchParams(window.location.search);',
  '      const root = params.get("root");',
  '      if (root) { try { await select(root); } catch (e) { /* ignore */ } }',
  '    })();',
  '  </script>',
  '</body>',
  '</html>'
].join('\n');

router.get('/', (_req, res) => {
  res.type('html').send(page);
});
