import { Router } from 'express';

export const router = Router();

const page = [
  '<!doctype html>',
  '<html lang="en">',
  '<head>',
  '  <meta charset="utf-8" />',
  '  <meta name="viewport" content="width=device-width, initial-scale=1" />',
  '  <title>New Discovery Request</title>',
  '  <link rel="apple-touch-icon" sizes="180x180" href="https://marketoffer-public-resources.s3.eu-west-2.amazonaws.com/Favicons/apple-touch-icon.png" />',
  '  <link rel="icon" type="image/png" sizes="32x32" href="https://marketoffer-public-resources.s3.eu-west-2.amazonaws.com/Favicons/favicon-32x32.png" />',
  '  <link rel="icon" type="image/png" sizes="16x16" href="https://marketoffer-public-resources.s3.eu-west-2.amazonaws.com/Favicons/favicon-16x16.png" />',
  '  <link rel="shortcut icon" href="https://marketoffer-public-resources.s3.eu-west-2.amazonaws.com/Favicons/favicon.ico" />',
  '  <style>',
  '    :root { --bg:#0f172a; --panel:#0b1220; --muted:#9ca3af; --text:#f3f4f6; --border:#243041; --accent:#60a5fa; }',
  '    html, body { height:100%; margin:0; padding:0; background:var(--bg); color:var(--text); font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Inter, Arial; }',
  '    .nav { display:flex; gap:16px; justify-content:center; padding:24px 12px 12px; align-items:center; flex-wrap:wrap; }',
  '    .nav-brand { display:flex; align-items:center; gap:10px; margin-right:12px; }',
  '    .nav-brand img { height:42px; width:auto; }',
  '    .nav .btn { padding:8px 12px; border-radius:8px; border:1px solid var(--border); background:#101a2d; color:var(--text); text-decoration:none; font-size:14px; transition:background .15s ease, border-color .15s ease; }',
  '    .nav .btn:hover { background:#16213a; border-color:#2d3b52; }',
  '    .nav .btn.active { background:#1f2a40; border-color:#334155; }',
  '    .nav .btn.disabled { opacity:0.55; pointer-events:none; cursor:default; }',
  '    .wrap { max-width:640px; margin:40px auto; padding:20px; background:var(--panel); border:1px solid var(--border); border-radius:12px; }',
  '    h1 { margin:0 0 16px 0; font-size:20px; }',
  '    .row { display:flex; gap:14px; }',
  '    label { display:block; font-size:12px; color:var(--muted); margin:10px 0 6px; }',
  '    input { width:100%; box-sizing:border-box; background:#0a0f1d; color:var(--text); border:1px solid var(--border); padding:10px 12px; border-radius:8px; }',
  '    button { margin-top:18px; padding:10px 14px; border-radius:8px; border:1px solid var(--border); background:#101a2d; color:var(--text); cursor:pointer; }',
  '    button:disabled { opacity:0.6; cursor:not-allowed; }',
  '    .hint { color:var(--muted); font-size:12px; margin-top:8px; }',
  '    .err { color:#fecaca; margin-top:10px; }',
  '    a { color:var(--accent); text-decoration:none; }',
  '    .flow-tabs { display:flex; gap:10px; margin:20px 0 18px; }',
  '    .flow-tabs a { flex:1; text-align:center; padding:10px 12px; border-radius:10px; border:1px solid var(--border); background:#101a2d; color:var(--text); font-size:0.9rem; text-decoration:none; transition: background .15s ease, border-color .15s ease; }',
  '    .flow-tabs a:hover { background:#16213a; border-color:#2d3b52; }',
  '    .flow-tabs a.active { background:#1f2a40; border-color:#334155; color:#e2e8f0; box-shadow:0 0 0 1px rgba(148,163,184,0.25); }',
  '  </style>',
  '</head>',
  '<body>',
  '  <nav class="nav" data-current="request">',
  '    <a class="nav-brand" href="/">',
  '      <img src="https://marketoffer-public-resources.s3.eu-west-2.amazonaws.com/MarketOffer+Icon+-+500px+Width+Inc+Border.png" alt="MarketOffer" />',
  '    </a>',
  '    <a class="btn" data-role="nav-btn" data-target="requests" data-base="/admin/requests" href="/admin/requests">View Requests</a>',
  '    <a class="btn" data-role="nav-btn" data-target="request" data-base="/admin/request" href="/admin/request">New Request</a>',
  '  </nav>',
  '  <div class="wrap">',
  '    <div style="display:flex;align-items:center;justify-content:space-between;gap:10px;">',
  '      <h1 id="pageTitle" style="margin:0">Start Discovery</h1>',
  '      <a href="/admin/settings" title="Settings" style="margin:0;padding:8px 10px;display:inline-flex;align-items:center;gap:8px;border:1px solid #243041;border-radius:8px;background:#101a2d;color:#f3f4f6;">',
  '        <span>Settings</span>',
  '        <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">',
  '          <circle cx="12" cy="12" r="3"></circle>',
  '          <path d="M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 1 1-2.83 2.83l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-4 0v-.09a1.65 1.65 0 0 0-1-1.51 1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 1 1-2.83-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1 0-4h.09a1.65 1.65 0 0 0 1.51-1 1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 1 1 2.83-2.83l.06.06a1.65 1.65 0 0 0 1.82.33h0A1.65 1.65 0 0 0 10.91 3H11a2 2 0 0 1 4 0v.09a1.65 1.65 0 0 0 1 1.51h0a1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 1 1 2.83 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82v0A1.65 1.65 0 0 0 21 10.91V11a2 2 0 0 1 0 4h-.09a1.65 1.65 0 0 0-1.51 1z"></path>',
  '        </svg>',
  '      </a>',
  '    </div>',
  '    <div class="flow-tabs">',
  '      <a data-flow-link="director" href="?flow=director">Director request</a>',
  '      <a data-flow-link="owner" href="?flow=owner">Owner request</a>',
  '    </div>',
  '    <section id="directorSection">',
  '    <form id="frm">',
  '      <div class="row">',
  '        <div style="flex:1">',
  '          <label for="firstName">First name</label>',
  '          <input id="firstName" name="firstName" placeholder="Jane" />',
  '        </div>',
  '        <div style="flex:1">',
  '          <label for="lastName">Last name</label>',
  '          <input id="lastName" name="lastName" placeholder="Doe" />',
  '        </div>',
  '      </div>',
  '      <div class="row">',
  '        <div style="flex:1">',
  '          <label for="recordId">Record ID (optional)</label>',
  '          <input id="recordId" name="recordId" placeholder="recXXXXXXXXXXXXXX" />',
  '        </div>',
  '        <div style="flex:1">',
  '          <label for="companyNumber">Company Number</label>',
  '          <input id="companyNumber" name="companyNumber" placeholder="01234567" required />',
  '        </div>',
  '      </div>',
  '      <button id="go" type="submit">Start</button>',
  '      <div class="hint">You will be redirected to the tracking page after the job is created.</div>',
  '      <div id="err" class="err"></div>',
  '    </form>',
  '    </section>',
  '    <section id="ownerSection" style="margin-top:32px; padding-top:24px; border-top:1px solid rgba(36,48,65,0.75);">',
  '      <h2 style="margin:0 0 16px 0; font-size:18px;">Homeowner Discovery</h2>',
  '      <p style="margin:0 0 18px 0; color:var(--muted); font-size:13px;">Run the private owner pipeline to infer likely homeowners using open data.</p>',
  '      <form id="ownerForm">',
  '        <div class="row">',
  '          <div style="flex:1 1 60%">',
  '            <label for="ownerLine1">Address line 1</label>',
  '            <input id="ownerLine1" name="ownerLine1" placeholder="10 Waterfront Mews" required />',
  '          </div>',
  '          <div style="flex:1 1 40%">',
  '            <label for="ownerLine2">Address line 2 (optional)</label>',
  '            <input id="ownerLine2" name="ownerLine2" placeholder="Flat 2" />',
  '          </div>',
  '        </div>',
  '        <div class="row">',
  '          <div style="flex:1">',
  '            <label for="ownerCity">Town / City</label>',
  '            <input id="ownerCity" name="ownerCity" placeholder="London" />',
  '          </div>',
  '          <div style="flex:1">',
  '            <label for="ownerPostcode">Postcode</label>',
  '            <input id="ownerPostcode" name="ownerPostcode" placeholder="N1 7FE" required />',
  '          </div>',
  '        </div>',
  '        <button id="ownerSubmit" type="submit" style="margin-top:18px;">Start Owner Pipeline</button>',
  '        <div id="ownerErr" class="err"></div>',
  '      </form>',
  '    </section>',
  '  </div>',
  '  <script>',
  '    const params = new URLSearchParams(window.location.search);',
  "    let currentFlow = (params.get('flow') || 'director').toLowerCase() === 'owner' ? 'owner' : 'director';",
  "    const navButtons = Array.from(document.querySelectorAll('[data-role=\"nav-btn\"]'));",
  '    const navCurrent = document.querySelector(".nav")?.dataset.current || "";',
  '    const flowLinks = Array.from(document.querySelectorAll("[data-flow-link]"));',
  '    function buildHref(base, opts) {',
  "      if (!base || base === '#') return base;",
  '      try {',
  '        const url = new URL(base, window.location.origin);',
  "        if (opts?.root) { url.searchParams.set('root', opts.root); } else { url.searchParams.delete('root'); }",
  "        if (opts?.flow) { url.searchParams.set('flow', opts.flow); } else { url.searchParams.delete('flow'); }",
  '        return url.pathname + url.search;',
  '      } catch {',
  '        return base;',
  '      }',
  '    }',
  '    function updateFlowLinks(root) {',
  '      flowLinks.forEach((link) => {',
  "        const target = (link.dataset.flowLink || '').toLowerCase();",
  '        if (!target) return;',
  '        const href = buildHref(window.location.pathname || "/admin/request", { root, flow: target });',
  '        link.setAttribute("href", href);',
  '        if (target === currentFlow) { link.classList.add("active"); } else { link.classList.remove("active"); }',
  '      });',
  '    }',
  '    function applyNavRoot(root) {',
  '      navButtons.forEach((btn) => {',
  '        const target = btn.dataset.target || "";',
  '        if (target === navCurrent) { btn.classList.add("active"); } else { btn.classList.remove("active"); }',
  '        const base = btn.dataset.base || btn.getAttribute("href") || "#";',
  '        if (btn.dataset.requiresRoot === "1") {',
  '          if (root) {',
  '            const opts = { root: root };',
  '            if (target === "request") { opts.flow = currentFlow; }',
  '            btn.setAttribute("href", buildHref(base, opts));',
  '            btn.classList.remove("disabled");',
  '            btn.setAttribute("aria-disabled", "false");',
  '          } else {',
  '            btn.setAttribute("href", "#");',
  '            btn.classList.add("disabled");',
  '            btn.setAttribute("aria-disabled", "true");',
  '          }',
  '        } else {',
  '          if (target === "request") {',
  '            btn.setAttribute("href", buildHref(base, { flow: currentFlow }));',
  '          } else {',
  '            btn.setAttribute("href", buildHref(base));',
  '          }',
  '        }',
  '      });',
  '      window.__currentNavRoot = root;',
  '      updateFlowLinks(root);',
  '    }',
  '    window.__setNavRoot = applyNavRoot;',
  '    const initRoot = params.get("root") || "";',
  '    const directorSection = document.getElementById("directorSection");',
  '    const ownerSection = document.getElementById("ownerSection");',
  '    const titleEl = document.getElementById("pageTitle");',
  '    function applyFlow(flow, root) {',
  "      currentFlow = flow === 'owner' ? 'owner' : 'director';",
  "      if (directorSection) directorSection.style.display = currentFlow === 'owner' ? 'none' : 'block';",
  "      if (ownerSection) ownerSection.style.display = currentFlow === 'owner' ? 'block' : 'none';",
  "      if (titleEl) titleEl.textContent = currentFlow === 'owner' ? 'Owner Discovery' : 'Director Discovery';",
  "      applyNavRoot(root != null ? root : window.__currentNavRoot || '');",
  '    }',
  '    applyFlow(currentFlow, initRoot);',
  '    flowLinks.forEach((link) => {',
  "      link.addEventListener('click', (ev) => {",
  '        ev.preventDefault();',
  "        const target = (link.dataset.flowLink || '').toLowerCase();",
  '        if (!target) return;',
  "        const root = window.__currentNavRoot || '';",
  '        applyFlow(target, root);',
  "        const newUrl = buildHref(window.location.pathname || \"/admin/request\", { flow: target, root });",
  "        if (typeof history.replaceState === 'function') {",
  "          history.replaceState(null, \"\", newUrl || \"/admin/request\");",
  '        } else {',
  '          window.location.href = newUrl;',
  '        }',
  '      });',
  '    });',
  '    const el = (id) => document.getElementById(id);',
  '    el("frm").addEventListener("submit", async (e) => {',
  '      e.preventDefault();',
  '      el("err").textContent = "";',
  '      const btn = el("go"); btn.disabled = true; btn.textContent = "Starting…";',
  '      const firstName = el("firstName").value.trim();',
  '      const lastName = el("lastName").value.trim();',
  '      const contactId = el("recordId").value.trim();',
  '      const companyNumber = el("companyNumber").value.trim();',
  '      if (!companyNumber) { el("err").textContent = "Company number is required"; btn.disabled = false; btn.textContent = "Start"; return; }',
  '      try {',
  '        const payload = { companyNumber };',
  '        if (firstName) payload.firstName = firstName;',
  '        if (lastName) payload.lastName = lastName;',
  '        if (contactId && contactId.length >= 3) payload.contactId = contactId;',
  '        const res = await fetch("/api/jobs/ch-appointments", {',
  '          method: "POST",',
  '          headers: { "Content-Type": "application/json" },',
  '          body: JSON.stringify(payload)',
  '        });',
  '        if (!res.ok) throw new Error("Request failed: " + res.status);',
  '        const data = await res.json();',
  '        const jobId = data.jobId;',
  '        if (!jobId) throw new Error("No jobId returned");',
  '        window.location.href = "/admin/progress?root=" + encodeURIComponent(jobId);',
  '      } catch (err) {',
  '        el("err").textContent = String(err);',
  '      } finally {',
  '        btn.disabled = false; btn.textContent = "Start";',
  '      }',
  '    });',
  '    const ownerForm = document.getElementById("ownerForm");',
  '    if (ownerForm) {',
  '      ownerForm.addEventListener("submit", async (e) => {',
  '        e.preventDefault();',
  '        const submit = document.getElementById("ownerSubmit");',
  '        const err = document.getElementById("ownerErr");',
  '        if (err) err.textContent = "";',
  '        if (submit) { submit.disabled = true; submit.textContent = "Starting…"; }',
  '        const valueOf = (id) => {',
  '          const input = document.getElementById(id);',
  '          if (input && typeof input.value === "string") return input.value.trim();',
  '          return "";',
  '        };',
  '        const address = {',
  '          line1: valueOf("ownerLine1"),',
  '          line2: valueOf("ownerLine2"),',
  '          city: valueOf("ownerCity"),',
  '          postcode: valueOf("ownerPostcode")',
  '        };',
  '        if (!address.line1 || !address.postcode) {',
  '          if (err) err.textContent = "Address line 1 and postcode are required";',
  '          if (submit) { submit.disabled = false; submit.textContent = "Start Owner Pipeline"; }',
  '          return;',
  '        }',
  '        try {',
  '          const payload = { address };',
  '          const res = await fetch("/api/jobs/owner-discovery", {',
  '            method: "POST",',
  '            headers: { "Content-Type": "application/json" },',
  '            body: JSON.stringify(payload)',
  '          });',
  '          if (!res.ok) throw new Error("Request failed: " + res.status);',
  '          const data = await res.json();',
  '          const jobId = data.jobId;',
  '          if (!jobId) throw new Error("No jobId returned");',
  '          window.location.href = "/admin/progress?root=" + encodeURIComponent(jobId);',
  '        } catch (ex) {',
  '          if (err) err.textContent = String(ex);',
  '        } finally {',
  '          if (submit) { submit.disabled = false; submit.textContent = "Start Owner Pipeline"; }',
  '        }',
  '      });',
  '    }',
  '  </script>',
  '</body>',
  '</html>'
].join('\n');

router.get('/', (_req, res) => {
  res.type('html').send(page);
});
